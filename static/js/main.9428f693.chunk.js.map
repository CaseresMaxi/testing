{"version":3,"sources":["components/Header/index.js","constants/index.js","components/CodeInput/index.js","components/Result/index.js","components/Title/index.js","components/Results/index.js","components/SubmitButton/index.js","components/TestingForm/index.js","util/index.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","alt","OPERADORES_JAVA","CodeInput","code","onCodeChange","id","placeholder","value","onChange","Result","name","Title","children","Results","SubmitButton","onClick","style","display","justifyContent","FORM_STATES","TestingForm","useState","cantLineasTotales","setcantLineasTotales","complejidadCiclomatica","setcomplejidadCiclomatica","longitudHalstead","setlongitudHalstead","volumenHalstead","setvolumenHalstead","comentariosSimples","setcomentariosSimples","n1","setn1","N1","setN1","n2","setn2","N2","setN2","type","settype","currentState","setCurrentState","outputs","parseFloat","toFixed","setCode","handleHalsteadResult","cantidadOperadoresUnicos","cantidadOperandosUnicos","cantidadOperadoresTotales","cantidadOperandosTotales","parseInt","Math","log2","handleComplejidadCiclomaticaResult","result","e","target","length","map","output","marginTop","preventDefault","split","callback","calcularComplejidadCiclomatica","texto","textosSinComentarios","replace","operandosUnicos","i","indexOf","aAnalizar","hasta","j","push","console","log","halstead","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9428f693.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./index.scss\";\r\n\r\nexport default function Header() {\r\n  return (\r\n    <header className=\"App-header\">\r\n      <div className=\"container\">\r\n        <div>\r\n          <img\r\n            src=\"https://miel.unlam.edu.ar/vista/imagenes/logo_unlam_34.png\"\r\n            className=\"unlam-logo\"\r\n            alt=\"logo unlam\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <p>Grupo 3</p>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n","export const OPERADORES_JAVA = [\r\n  \"+\",\r\n  \"-\",\r\n  \"/\",\r\n  \"*\",\r\n  \"int\",\r\n  \"double\",\r\n  \"float\",\r\n  \";\",\r\n  \":\",\r\n  \"public\",\r\n  \"static\",\r\n  \"void\",\r\n  \"&&\",\r\n  \"||\",\r\n  \"<=\",\r\n  \">=\",\r\n  \"<\",\r\n  \">\",\r\n];\r\n\r\nexport const OPERADORES_JAVA_n1 = {\r\n \"{\" : 0,\r\n  \"for\" : 0,\r\n  \"=\" : 0,\r\n  \"if\" : 0,\r\n  \";\" : 0,\r\n  \"(\" : 0,\r\n  \"<\" : 0,\r\n  \"<=\": 0,\r\n  \"++\" : 0,\r\n  \"[\" : 0,\r\n};\r\n\r\nexport const CONDICIONALES_JAVA = {\r\n  \">\": 0,\r\n  \"<\": 0,\r\n  \">=\": 0,\r\n  \"<=\": 0,\r\n  \"==\": 0,\r\n  try: 0,\r\n};\r\n\r\nexport const CODE_EXAMPLE = `public static void main(String[] args) {\r\n\r\n  Java8Function3 obj = new Java8Function3();\r\n\r\n  List<String> list = Arrays.asList(\"node\", \"c++\", \"java\", \"javascript\");\r\n\r\n  // lambda\r\n  Map<String, Integer> map = obj.convertListToMap(list, x -> x.length());\r\n\r\n  System.out.println(map);    // {node=4, c++=3, java=4, javascript=10}\r\n\r\n  // method reference\r\n  Map<String, Integer> map2 = obj.convertListToMap(list, obj::getLength);\r\n\r\n  System.out.println(map2);\r\n}`;\r\n","import React from \"react\";\r\n\r\nimport \"./index.scss\";\r\n\r\nexport default function CodeInput({ code, onCodeChange }) {\r\n  return (\r\n    <div className=\"codigo-container\">\r\n      <textarea\r\n        id=\"code\"\r\n        placeholder=\"codigo a evaluar\"\r\n        className=\"codigo\"\r\n        value={code}\r\n        onChange={onCodeChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"./index.scss\";\r\n\r\nexport default function Result({ value, name }) {\r\n  return (\r\n    <div className=\"result\">\r\n      <div className=\"result-value-container\">{value}</div>\r\n      <div className=\"result-description-container\">{name}</div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"./index.scss\";\r\n\r\nexport default function Title({ children }) {\r\n  return (\r\n    <div className=\"result-title-container\">\r\n      <p>{children}</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Title from \"../Title\";\r\n\r\nimport \"./index.scss\";\r\n\r\nexport default function Results({ children, className }) {\r\n  return (\r\n    <div className={`results-container ${className}`}>\r\n      <Title>Resultados</Title>\r\n      <div className=\"cards-container\">{children}</div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"./index.scss\";\r\n\r\nexport default function SubmitButton({ onClick, style, children }) {\r\n  return (\r\n    <div style={{ display: \"flex\", justifyContent: \"center\", ...style }}>\r\n      <button onClick={onClick} className=\"submit-button\">\r\n        {children}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import React, { useState } from \"react\";\r\nimport { CODE_EXAMPLE, OPERADORES_JAVA_n1 } from \"../../constants\";\r\nimport { halstead, calcularComplejidadCiclomatica } from \"../../util\";\r\nimport CodeInput from \"../CodeInput\";\r\nimport Result from \"../Result\";\r\nimport Results from \"../Results\";\r\nimport SubmitButton from \"../SubmitButton\";\r\nimport Title from \"../Title\";\r\n\r\nimport \"./index.scss\";\r\n\r\nconst FORM_STATES = {\r\n  WAITING_INPUT: 1,\r\n  INPUT_LOADED: 2,\r\n  SHOW_RESULTS: 3,\r\n};\r\n\r\nexport default function TestingForm() {\r\n  const [cantLineasTotales, setcantLineasTotales] = useState(0);\r\n  const [complejidadCiclomatica, setcomplejidadCiclomatica] = useState(0);\r\n  const [longitudHalstead, setlongitudHalstead] = useState(0);\r\n  const [volumenHalstead, setvolumenHalstead] = useState(0);\r\n  const [comentariosSimples, setcomentariosSimples] = useState(0);\r\n  const [n1, setn1] = useState(0);\r\n  const [N1, setN1] = useState(0)\r\n  const [n2, setn2] = useState(0);\r\n  const [N2, setN2] = useState(0);\r\n  const [type, settype] = useState(\"both\");\r\n  const [currentState, setCurrentState] = useState(FORM_STATES.INPUT_LOADED);\r\n\r\n  const outputs = [\r\n    {\r\n      name: \"cantidad de líneas\",\r\n      value: cantLineasTotales,\r\n      type: \"both\",\r\n    },\r\n    {\r\n      name: \"cantidad de líneas de código\",\r\n      value: cantLineasTotales - comentariosSimples,\r\n      type: \"both\",\r\n    },\r\n    {\r\n      name: \"cantidad de líneas comentadas\",\r\n      value: comentariosSimples,\r\n      type: \"both\",\r\n    },\r\n    {\r\n      name: \"porcentaje de líneas comentadas\",\r\n      value:\r\n        comentariosSimples > 0 && cantLineasTotales > 0\r\n          ? (parseFloat(comentariosSimples / cantLineasTotales) * 100).toFixed(\r\n            3\r\n          )\r\n          : 0,\r\n      type: \"both\",\r\n    },\r\n    {\r\n      name: \"complejidad ciclomática\",\r\n      value: complejidadCiclomatica,\r\n      type: \"McCabe\",\r\n    },\r\n    {\r\n      name: \"longitud de Halstead\",\r\n      value: longitudHalstead,\r\n      type: \"Halstead\",\r\n    },\r\n    {\r\n      name: \"volumen de Halstead\",\r\n      value: volumenHalstead,\r\n      type: \"Halstead\",\r\n    },\r\n    {\r\n      name: \"n1\",\r\n      value: n1,\r\n      type: \"Halstead\",\r\n    },\r\n    {\r\n      name: \"N1\",\r\n      value: N1,\r\n      type: \"Halstead\",\r\n    },\r\n    {\r\n      name: \"n2\",\r\n      value: n2,\r\n      type: \"Halstead\",\r\n    },\r\n    {\r\n      name: \"N2\",\r\n      value: N2,\r\n      type: \"Halstead\",\r\n    },\r\n  ];\r\n\r\n  const [code, setCode] = useState(CODE_EXAMPLE);\r\n  const handleCodeChange = (e) => {\r\n    setCode(e.target.value);\r\n\r\n    if (e.target.value.length) setCurrentState(FORM_STATES.INPUT_LOADED);\r\n    else setCurrentState(FORM_STATES.WAITING_INPUT);\r\n  };\r\n  // const calcularOperadoresN1n1 = (code) => {\r\n  //   const OPERADORES_JAVA_n1_ = {\r\n  //     \"{\": 0,\r\n  //     \"for\": 0,\r\n  //     \"=\": 0,\r\n  //     \"if\": 0,\r\n  //     \";\": 0,\r\n  //     \"(\": 0,\r\n  //     \"<\": 0,\r\n  //     \"<=\": 0,\r\n  //     \"++\": 0,\r\n  //     \"[\": 0,\r\n  //   };\r\n\r\n  //   code.map((c) => {\r\n  //     Object.keys(OPERADORES_JAVA_n1_).map((op) => {\r\n  //       if (c.includes(op)) {\r\n  //         OPERADORES_JAVA_n1_[op] = OPERADORES_JAVA_n1_[op] + 1\r\n  //       }\r\n  //     })\r\n  //   })\r\n  //   let res1 = 0;\r\n  //   let res2 = 0;\r\n  //   Object.keys(OPERADORES_JAVA_n1_).map((op) => {\r\n  //     res1 = res1 + OPERADORES_JAVA_n1_[op]\r\n  //     if (OPERADORES_JAVA_n1_[op] != 0) {\r\n  //       res2 = res2 + 1\r\n  //     }\r\n  //   })\r\n  //   setn1(res1)\r\n  //   setN1(res2)\r\n\r\n  // }\r\n\r\n\r\n  // const calcularOperadoresn2N2 = (code) => {\r\n  //   const OPERADORES_JAVA_TYPES = [\r\n  //     \"int\",\r\n  //     \"double\",\r\n  //     \"float\",\r\n  //     \"public\",\r\n  //     \"static\",\r\n  //     //\"void\",\r\n  //   ];\r\n  //   const OPERADORES_JAVA_n2={}\r\n  //   let c=0\r\n  //  while(c<code.length) { \r\n     \r\n  //    OPERADORES_JAVA_TYPES.map((type) => {\r\n  //       if (code[c].includes(type)) {\r\n  //       console.log(code[c],code[c+1])\r\n  //       }\r\n  //     })\r\n  //     c=c+1\r\n  //   }\r\n \r\n    \r\n  // }\r\n\r\n  const handleHalsteadResult = (\r\n    cantidadOperadoresUnicos,\r\n    cantidadOperandosUnicos,\r\n    cantidadOperadoresTotales,\r\n    cantidadOperandosTotales\r\n  ) => {\r\n      setn1(cantidadOperadoresTotales)\r\n      setN1(cantidadOperadoresUnicos)\r\n      setn2(cantidadOperandosTotales)\r\n      setN2(cantidadOperandosUnicos)\r\n    setlongitudHalstead(\r\n      cantidadOperadoresUnicos <= 0 || cantidadOperandosUnicos <= 0\r\n        ? \"-\"\r\n        : parseInt(\r\n          cantidadOperadoresUnicos * Math.log2(cantidadOperadoresUnicos) +\r\n          cantidadOperandosUnicos * Math.log2(cantidadOperandosUnicos)\r\n        )\r\n    );\r\n    setvolumenHalstead(\r\n      cantidadOperadoresUnicos + cantidadOperandosUnicos <= 0\r\n        ? \"-\"\r\n        : parseFloat(\r\n          (cantidadOperadoresTotales + cantidadOperandosTotales) *\r\n          Math.log2(cantidadOperadoresUnicos + cantidadOperandosUnicos)\r\n        ).toFixed(1)\r\n    );\r\n  };\r\n\r\n  const handleComplejidadCiclomaticaResult = (result) => {\r\n    setcomplejidadCiclomatica(result + 1);\r\n  };\r\n\r\n  //TODO: fanin fanout\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // calcularOperadoresN1n1(code.split(\" \"))\r\n    // calcularOperadoresn2N2(code.split(\" \"))\r\n    setcantLineasTotales(code.split(\"\\n\").length);\r\n    setcomentariosSimples(code.split(\"//\").length - 1);\r\n\r\n    calcularComplejidadCiclomatica(code, handleComplejidadCiclomaticaResult);\r\n    halstead(code, handleHalsteadResult);\r\n\r\n    setCurrentState(FORM_STATES.SHOW_RESULTS);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Title>Herramienta de testing</Title>\r\n\r\n      <CodeInput code={code} onCodeChange={handleCodeChange} />\r\n\r\n      <div style={{ display: \"flex\" }}>\r\n        <button\r\n          className={type === \"McCabe\" ? \"checked-button\" : \"unchecked-button\"}\r\n          onClick={() => {\r\n            settype(\"McCabe\");\r\n          }}\r\n        >\r\n          McCabe\r\n        </button>\r\n        <button\r\n          className={\r\n            type === \"Halstead\" ? \"checked-button\" : \"unchecked-button\"\r\n          }\r\n          onClick={() => {\r\n            settype(\"Halstead\");\r\n          }}\r\n        >\r\n          Halstead\r\n        </button>\r\n        <button\r\n          className={type === \"both\" ? \"checked-button\" : \"unchecked-button\"}\r\n          onClick={() => {\r\n            settype(\"both\");\r\n          }}\r\n        >\r\n          Ambos\r\n        </button>\r\n      </div>\r\n      <Results\r\n        className={\r\n          currentState === FORM_STATES.SHOW_RESULTS ? \"div-show\" : \"div-hide\"\r\n        }\r\n      >\r\n        {outputs.map(\r\n          (output) =>\r\n            (type === output.type ||\r\n              output.type === \"both\" ||\r\n              type === \"both\") && <Result key={output.name} {...output} />\r\n        )}\r\n      </Results>\r\n      {currentState === FORM_STATES.INPUT_LOADED && (\r\n        <SubmitButton style={{ marginTop: \"20px\" }} onClick={handleSubmit}>\r\n          Calcular\r\n        </SubmitButton>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { CONDICIONALES_JAVA, OPERADORES_JAVA } from \"../constants\";\r\n\r\nexport const halstead = (texto, callback) => {\r\n  //Operadores + - = * ; int double float return\r\n  let textosSinComentarios = texto.replace(\r\n    /(\\/\\*([\\s\\S]*?)\\*\\/)|(\\/\\/(.*)$)/gm,\r\n    \"\"\r\n  );\r\n  let cantidadOperadoresTotales = 0;\r\n  let cantidadOperandosTotales = 0;\r\n  let cantidadOperadoresUnicos = 0;\r\n  let cantidadOperandosUnicos = 0;\r\n\r\n  //var operadores = document.getElementById(\"operadores\").value.split(',');\r\n  let operandosUnicos = [];\r\n\r\n  //OPERADORES UNICOS Y TOTALES.\r\n  for (let i = 0; i < OPERADORES_JAVA.length; i++) {\r\n    if (textosSinComentarios.indexOf(OPERADORES_JAVA[i]) !== -1)\r\n      cantidadOperadoresUnicos++;\r\n    cantidadOperadoresTotales += texto.split(OPERADORES_JAVA[i]).length - 1;\r\n  }\r\n\r\n  //OPERADORES TOTALES\r\n\r\n  //OPERANDOS UNICOS Y TOTALES.\r\n  let aAnalizar = textosSinComentarios.split(\" \");\r\n  let hasta = textosSinComentarios.split(\" \").length;\r\n  for (let j = 0; j < hasta; j++) {\r\n    //Si no es un operador y todavia no esta en el array de operandos unicos.\r\n    if (\r\n      OPERADORES_JAVA.indexOf(aAnalizar[j]) === -1 &&\r\n      operandosUnicos.indexOf(aAnalizar[j]) === -1\r\n    ) {\r\n      operandosUnicos.push(aAnalizar[j]);\r\n      cantidadOperandosUnicos++;\r\n    }\r\n    //Si no es un operador.\r\n    if (OPERADORES_JAVA.indexOf(aAnalizar[j]) === -1)\r\n      cantidadOperandosTotales++;\r\n  }\r\n\r\n  console.log({\r\n    cantidadOperadoresUnicos,\r\n    cantidadOperandosUnicos,\r\n    cantidadOperadoresTotales,\r\n    cantidadOperandosTotales,\r\n  });\r\n\r\n  callback(\r\n    cantidadOperadoresUnicos,\r\n    cantidadOperandosUnicos,\r\n    cantidadOperadoresTotales,\r\n    cantidadOperandosTotales\r\n  );\r\n};\r\nexport const calcularComplejidadCiclomatica = (code, callback) => {\r\n  let result = 0;\r\n  result+=code.split('if(').length - 1;\r\n  result+=code.split('if (').length - 1;\r\n  result+=code.split('for(').length - 1;\r\n  result+=code.split('for (').length - 1;\r\n  result+=code.split('while(').length - 1;\r\n  result+=code.split('while (').length - 1;\r\n  result+=code.split('||').length - 1;\r\n  result+=code.split('&&').length - 1;\r\n  result+=code.split('try{').length - 1;\r\n  result+=code.split('try(').length - 1;\r\n  result+=code.split('try {').length - 1;\r\n  result+=code.split('try (').length - 1;\r\n\r\n\r\n  callback(result);\r\n};\r\n","import \"./App.scss\";\r\nimport Header from \"./components/Header\";\r\nimport TestingForm from \"./components/TestingForm\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <div className=\"contenedor\">\r\n        <TestingForm />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}